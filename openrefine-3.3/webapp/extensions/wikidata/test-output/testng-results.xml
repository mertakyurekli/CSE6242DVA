<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="266" passed="265">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="8299" started-at="2020-01-06T12:28:38Z" finished-at="2020-01-06T12:28:47Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="8299" started-at="2020-01-06T12:28:38Z" finished-at="2020-01-06T12:28:47Z">
      <class name="org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="setUp" is-config="true" duration-ms="12" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testBoundsAllowed()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="testBoundsAllowed" duration-ms="16" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundsAllowed -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="setUp" is-config="true" duration-ms="5" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testBoundsDisallowed()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="testBoundsDisallowed" duration-ms="4" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundsDisallowed -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFractionalAllowed()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="testFractionalAllowed" duration-ms="2" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFractionalAllowed -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFractionalDisallowed()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="testFractionalDisallowed" duration-ms="3" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFractionalDisallowed -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGoodUnit()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="testGoodUnit" duration-ms="2" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoodUnit -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInteger()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="testInteger" duration-ms="2" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInteger -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNoUnit()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="testNoUnit" duration-ms="1" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoUnit -->
        <test-method status="PASS" signature="testTrailingZeros()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="testTrailingZeros" duration-ms="1" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrailingZeros -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testUnitForbidden()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="testUnitForbidden" duration-ms="1" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnitForbidden -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testUnitReqired()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="testUnitReqired" duration-ms="2" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnitReqired -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testWrongUnit()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest@7c6908d7]" name="testWrongUnit" duration-ms="3" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWrongUnit -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.QuantityScrutinizerTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.DistinctValuesScrutinizerTest">
        <test-method status="PASS" signature="testTrigger()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.DistinctValuesScrutinizerTest@3c9754d8]" name="testTrigger" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrigger -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.DistinctValuesScrutinizerTest@3c9754d8]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.DistinctValuesScrutinizerTest -->
      <class name="org.openrefine.wikidata.qa.WikidataConstraintFetcherTests">
        <test-method status="PASS" signature="testAllowedQualifiers()[pri:0, instance:org.openrefine.wikidata.qa.WikidataConstraintFetcherTests@3bf7ca37]" name="testAllowedQualifiers" duration-ms="388" started-at="2020-01-06T13:28:38Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllowedQualifiers -->
        <test-method status="PASS" signature="testDistinctValues()[pri:0, instance:org.openrefine.wikidata.qa.WikidataConstraintFetcherTests@3bf7ca37]" name="testDistinctValues" duration-ms="52" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistinctValues -->
        <test-method status="PASS" signature="testGetFormatConstraint()[pri:0, instance:org.openrefine.wikidata.qa.WikidataConstraintFetcherTests@3bf7ca37]" name="testGetFormatConstraint" duration-ms="46" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFormatConstraint -->
        <test-method status="PASS" signature="testGetInverseConstraint()[pri:0, instance:org.openrefine.wikidata.qa.WikidataConstraintFetcherTests@3bf7ca37]" name="testGetInverseConstraint" duration-ms="24" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetInverseConstraint -->
        <test-method status="PASS" signature="testMandatoryQualifiers()[pri:0, instance:org.openrefine.wikidata.qa.WikidataConstraintFetcherTests@3bf7ca37]" name="testMandatoryQualifiers" duration-ms="36" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMandatoryQualifiers -->
        <test-method status="PASS" signature="testSingleValue()[pri:0, instance:org.openrefine.wikidata.qa.WikidataConstraintFetcherTests@3bf7ca37]" name="testSingleValue" duration-ms="21" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleValue -->
      </class> <!-- org.openrefine.wikidata.qa.WikidataConstraintFetcherTests -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.UnsourcedScrutinizerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.UnsourcedScrutinizerTest@79079097]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTrigger()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.UnsourcedScrutinizerTest@79079097]" name="testTrigger" duration-ms="2" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrigger -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.UnsourcedScrutinizerTest -->
      <class name="org.openrefine.wikidata.schema.WbStatementExprTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="createProject" is-config="true" duration-ms="5" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testCreation()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="testCreation" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreation -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="createProject" is-config="true" duration-ms="9" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluate()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="testEvaluate" duration-ms="11" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="createProject" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluateWithConstant()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="testEvaluateWithConstant" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluateWithConstant -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="createProject" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluateWithoutQualifier()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="testEvaluateWithoutQualifier" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluateWithoutQualifier -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="initServlet" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="createProject" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluateWithoutQualifierAndReference()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="testEvaluateWithoutQualifierAndReference" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluateWithoutQualifierAndReference -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="initServlet" is-config="true" duration-ms="7" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="createProject" is-config="true" duration-ms="5" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluateWithoutReference()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="testEvaluateWithoutReference" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluateWithoutReference -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="initServlet" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="createProject" is-config="true" duration-ms="12" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="testSerialize" duration-ms="38" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="initServlet" is-config="true" duration-ms="10" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="createProject" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSkip()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementExprTest@4d1c00d0]" name="testSkip" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkip -->
      </class> <!-- org.openrefine.wikidata.schema.WbStatementExprTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest@bcec361]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAllowedValue()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest@bcec361]" name="testAllowedValue" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllowedValue -->
        <test-method status="PASS" signature="testAllowedValueFailing()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest@bcec361]" name="testAllowedValueFailing" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllowedValueFailing -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest@bcec361]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDisallowedValue()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest@bcec361]" name="testDisallowedValue" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisallowedValue -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest@bcec361]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDisallowedValueFailing()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest@bcec361]" name="testDisallowedValueFailing" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisallowedValueFailing -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest@bcec361]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNoConstraint()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest@bcec361]" name="testNoConstraint" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoConstraint -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest@bcec361]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.RestrictedValuesScrutinizerTest -->
      <class name="org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateSchedulerTest">
        <test-method status="PASS" signature="testImpossibleForQS()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateSchedulerTest@4b2bac3f]" name="testImpossibleForQS" duration-ms="20" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <exception class="org.openrefine.wikidata.updates.scheduler.ImpossibleSchedulingException">
            <full-stacktrace>
              <![CDATA[org.openrefine.wikidata.updates.scheduler.ImpossibleSchedulingException
	at org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateScheduler.splitUpdate(QuickStatementsUpdateScheduler.java:91)
	at org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateScheduler.schedule(QuickStatementsUpdateScheduler.java:119)
	at org.openrefine.wikidata.updates.scheduler.UpdateSchedulerTest.schedule(UpdateSchedulerTest.java:60)
	at org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateSchedulerTest.testImpossibleForQS(QuickStatementsUpdateSchedulerTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openrefine.wikidata.updates.scheduler.ImpossibleSchedulingException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImpossibleForQS -->
        <test-method status="PASS" signature="testNoNewItem()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateSchedulerTest@4b2bac3f]" name="testNoNewItem" duration-ms="11" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoNewItem -->
        <test-method status="PASS" signature="testSelfEditOnNewITem()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateSchedulerTest@4b2bac3f]" name="testSelfEditOnNewITem" duration-ms="2" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelfEditOnNewITem -->
        <test-method status="PASS" signature="testSplitUpdate()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateSchedulerTest@4b2bac3f]" name="testSplitUpdate" duration-ms="10" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSplitUpdate -->
        <test-method status="PASS" signature="testMerge()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateSchedulerTest@4b2bac3f]" name="testMerge" duration-ms="7" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMerge -->
        <test-method status="PASS" signature="testMergeNew()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateSchedulerTest@4b2bac3f]" name="testMergeNew" duration-ms="3" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeNew -->
        <test-method status="PASS" signature="testNewItemMentioned()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateSchedulerTest@4b2bac3f]" name="testNewItemMentioned" duration-ms="7" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewItemMentioned -->
        <test-method status="PASS" signature="testNewItemNotMentioned()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateSchedulerTest@4b2bac3f]" name="testNewItemNotMentioned" duration-ms="5" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewItemNotMentioned -->
      </class> <!-- org.openrefine.wikidata.updates.scheduler.QuickStatementsUpdateSchedulerTest -->
      <class name="org.openrefine.wikidata.schema.WbDateVariableTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="createProject" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testMinutesISO()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="testMinutesISO" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinutesISO -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="setupVariable" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testNumber()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="testNumber" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNumber -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="testSerialize" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSkipped()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="testSkipped" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkipped -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="createProject" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testValidFormat()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="testValidFormat" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidFormat -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="setupVariable" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testWhitespace()[pri:0, instance:org.openrefine.wikidata.schema.WbDateVariableTest@4e08711f]" name="testWhitespace" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWhitespace -->
      </class> <!-- org.openrefine.wikidata.schema.WbDateVariableTest -->
      <class name="org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="setUpProject" is-config="true" duration-ms="155" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="setUp" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testCsrfProtection()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="testCsrfProtection" duration-ms="11" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCsrfProtection -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="setUpProject" is-config="true" duration-ms="5" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testInvalidSchema()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="testInvalidSchema" duration-ms="17" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSchema -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="initServlet" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="setUpProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="testValidSchema()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="testValidSchema" duration-ms="28" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidSchema -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="setUpProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNoSchema()[pri:0, instance:org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest@26794848]" name="testNoSchema" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSchema -->
      </class> <!-- org.openrefine.wikidata.commands.SaveWikibaseSchemaCommandTest -->
      <class name="org.openrefine.wikidata.operations.SaveWikibaseSchemaOperationTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.operations.SaveWikibaseSchemaOperationTest@302552ec]" name="initServlet" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.operations.SaveWikibaseSchemaOperationTest@302552ec]" name="setUp" is-config="true" duration-ms="101" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="registerOperation()[pri:0, instance:org.openrefine.wikidata.operations.SaveWikibaseSchemaOperationTest@302552ec]" name="registerOperation" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerOperation -->
        <test-method status="PASS" signature="testReconstruct()[pri:0, instance:org.openrefine.wikidata.operations.SaveWikibaseSchemaOperationTest@302552ec]" name="testReconstruct" duration-ms="11" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReconstruct -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.operations.SaveWikibaseSchemaOperationTest@302552ec]" name="initServlet" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.operations.SaveWikibaseSchemaOperationTest@302552ec]" name="setUp" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="registerOperation()[pri:0, instance:org.openrefine.wikidata.operations.SaveWikibaseSchemaOperationTest@302552ec]" name="registerOperation" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerOperation -->
        <test-method status="PASS" signature="testLoadChange()[pri:0, instance:org.openrefine.wikidata.operations.SaveWikibaseSchemaOperationTest@302552ec]" name="testLoadChange" duration-ms="10" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadChange -->
      </class> <!-- org.openrefine.wikidata.operations.SaveWikibaseSchemaOperationTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.FormatScrutinizerTest">
        <test-method status="PASS" signature="testIncompleteMatch()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.FormatScrutinizerTest@3d285d7e]" name="testIncompleteMatch" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIncompleteMatch -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.FormatScrutinizerTest@3d285d7e]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNoIssue()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.FormatScrutinizerTest@3d285d7e]" name="testNoIssue" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoIssue -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.FormatScrutinizerTest@3d285d7e]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.FormatScrutinizerTest@3d285d7e]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTrigger()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.FormatScrutinizerTest@3d285d7e]" name="testTrigger" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrigger -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.FormatScrutinizerTest -->
      <class name="org.openrefine.wikidata.commands.LoginCommandTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="setUpProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="testCsrfProtection()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="testCsrfProtection" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCsrfProtection -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="SetUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="setUpProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="testGetNotCsrfProtected()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="testGetNotCsrfProtected" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNotCsrfProtected -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="SetUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="setUpProject" is-config="true" duration-ms="7" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="testNoCredentials()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="testNoCredentials" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoCredentials -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:org.openrefine.wikidata.commands.LoginCommandTest@40005471]" name="SetUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
      </class> <!-- org.openrefine.wikidata.commands.LoginCommandTest -->
      <class name="org.openrefine.wikidata.schema.WikibaseSchemaTest">
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="setUpProject" is-config="true" duration-ms="5" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testDeserialize()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="testDeserialize" duration-ms="7" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeserialize -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="setUpProject" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="testDeserializeEmpty()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="testDeserializeEmpty" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <exception class="com.fasterxml.jackson.databind.exc.InvalidDefinitionException">
            <message>
              <![CDATA[Cannot construct instance of `org.openrefine.wikidata.schema.WbStatementGroupExpr`, problem: Object must not be null
 at [Source: (String)"{"itemDocuments":[{"statementGroups":[{"statements":[]}],"nameDescs":[]}],"wikibasePrefix":"http://www.wikidata.org/entity/"}"; line: 1, column: 55] (through reference chain: org.openrefine.wikidata.schema.WikibaseSchema["itemDocuments"]->java.util.ArrayList[0]->org.openrefine.wikidata.schema.WbItemDocumentExpr["statementGroups"]->java.util.ArrayList[0])]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `org.openrefine.wikidata.schema.WbStatementGroupExpr`, problem: Object must not be null
 at [Source: (String)"{"itemDocuments":[{"statementGroups":[{"statements":[]}],"nameDescs":[]}],"wikibasePrefix":"http://www.wikidata.org/entity/"}"; line: 1, column: 55] (through reference chain: org.openrefine.wikidata.schema.WikibaseSchema["itemDocuments"]->java.util.ArrayList[0]->org.openrefine.wikidata.schema.WbItemDocumentExpr["statementGroups"]->java.util.ArrayList[0])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.instantiationException(DeserializationContext.java:1608)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.wrapAsJsonMappingException(StdValueInstantiator.java:484)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.rewrapCtorProblem(StdValueInstantiator.java:503)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromObjectWith(StdValueInstantiator.java:285)
	at com.fasterxml.jackson.databind.deser.ValueInstantiator.createFromObjectWith(ValueInstantiator.java:229)
	at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:195)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:488)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:286)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)
	at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:530)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeWithErrorWrapping(BeanDeserializer.java:528)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:417)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:286)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)
	at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:530)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeWithErrorWrapping(BeanDeserializer.java:528)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:417)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1287)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4014)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3005)
	at org.openrefine.wikidata.schema.WikibaseSchema.reconstruct(WikibaseSchema.java:182)
	at org.openrefine.wikidata.schema.WikibaseSchemaTest.testDeserializeEmpty(WikibaseSchemaTest.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.IllegalArgumentException: Object must not be null
	at org.jsoup.helper.Validate.notNull(Validate.java:16)
	at org.openrefine.wikidata.schema.WbStatementGroupExpr.<init>(WbStatementGroupExpr.java:50)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.call(AnnotatedConstructor.java:124)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromObjectWith(StdValueInstantiator.java:283)
	... 52 more
]]>
            </full-stacktrace>
          </exception> <!-- com.fasterxml.jackson.databind.exc.InvalidDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeserializeEmpty -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="setUpProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="testEvaluate()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="testEvaluate" duration-ms="8" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="setUpProject" is-config="true" duration-ms="14" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="testEvaluateRespectsFacets()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="testEvaluateRespectsFacets" duration-ms="22" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluateRespectsFacets -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="setUpProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WikibaseSchemaTest@2cd76f31]" name="testSerialize" duration-ms="10" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
      </class> <!-- org.openrefine.wikidata.schema.WikibaseSchemaTest -->
      <class name="org.openrefine.wikidata.schema.WbLanguageVariableTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="createProject" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testInvalidLanguageCode()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="testInvalidLanguageCode" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLanguageCode -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="testSerialize" duration-ms="9" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="initServlet" is-config="true" duration-ms="5" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testValidLanguageCode()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="testValidLanguageCode" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLanguageCode -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageVariableTest@367ffa75]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
      </class> <!-- org.openrefine.wikidata.schema.WbLanguageVariableTest -->
      <class name="org.openrefine.wikidata.schema.WbLanguageConstantTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageConstantTest@49438269]" name="initServlet" is-config="true" duration-ms="35" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageConstantTest@49438269]" name="createProject" is-config="true" duration-ms="1401" started-at="2020-01-06T13:28:39Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluation()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageConstantTest@49438269]" name="testEvaluation" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluation -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageConstantTest@49438269]" name="createProject" is-config="true" duration-ms="7" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageConstantTest@49438269]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testNormalizeLanguageCode()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageConstantTest@49438269]" name="testNormalizeLanguageCode" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNormalizeLanguageCode -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageConstantTest@49438269]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageConstantTest@49438269]" name="createProject" is-config="true" duration-ms="7" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialization()[pri:0, instance:org.openrefine.wikidata.schema.WbLanguageConstantTest@49438269]" name="testSerialization" duration-ms="32" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialization -->
      </class> <!-- org.openrefine.wikidata.schema.WbLanguageConstantTest -->
      <class name="org.openrefine.wikidata.schema.WbItemDocumentExprTest">
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testAliasSkipped()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="testAliasSkipped" duration-ms="5" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAliasSkipped -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluate()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="testEvaluate" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="initServlet" is-config="true" duration-ms="7" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="createProject" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="testSerialize" duration-ms="34" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testStatementSkipped()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="testStatementSkipped" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatementSkipped -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="initServlet" is-config="true" duration-ms="6" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSubjectSkipped()[pri:0, instance:org.openrefine.wikidata.schema.WbItemDocumentExprTest@ba2f4ec]" name="testSubjectSkipped" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubjectSkipped -->
      </class> <!-- org.openrefine.wikidata.schema.WbItemDocumentExprTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest@55fe41ea]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDuplicateWhitespace()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest@55fe41ea]" name="testDuplicateWhitespace" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuplicateWhitespace -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest@55fe41ea]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMonolingualTextValue()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest@55fe41ea]" name="testMonolingualTextValue" duration-ms="5" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMonolingualTextValue -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest@55fe41ea]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMultipleIssues()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest@55fe41ea]" name="testMultipleIssues" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleIssues -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest@55fe41ea]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNoIssue()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest@55fe41ea]" name="testNoIssue" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoIssue -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest@55fe41ea]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNonPrintableChars()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest@55fe41ea]" name="testNonPrintableChars" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonPrintableChars -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.WhitespaceScrutinizerTest -->
      <class name="org.openrefine.wikidata.editing.NewItemLibraryTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.editing.NewItemLibraryTest@1c1bbc4e]" name="initServlet" is-config="true" duration-ms="217" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.NewItemLibraryTest@1c1bbc4e]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRetrieveItem()[pri:0, instance:org.openrefine.wikidata.editing.NewItemLibraryTest@1c1bbc4e]" name="testRetrieveItem" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetrieveItem -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.editing.NewItemLibraryTest@1c1bbc4e]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.editing.NewItemLibraryTest@1c1bbc4e]" name="testSerialize" duration-ms="12" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.NewItemLibraryTest@1c1bbc4e]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testUpdateReconciledCells()[pri:0, instance:org.openrefine.wikidata.editing.NewItemLibraryTest@1c1bbc4e]" name="testUpdateReconciledCells" duration-ms="13" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateReconciledCells -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.editing.NewItemLibraryTest@1c1bbc4e]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.NewItemLibraryTest@1c1bbc4e]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- org.openrefine.wikidata.editing.NewItemLibraryTest -->
      <class name="org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest">
        <test-method status="PASS" signature="testEquality()[pri:0, instance:org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest@fbd1f6]" name="testEquality" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquality -->
        <test-method status="PASS" signature="testGetId()[pri:0, instance:org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest@fbd1f6]" name="testGetId" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetId -->
        <test-method status="PASS" signature="testGetIri()[pri:0, instance:org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest@fbd1f6]" name="testGetIri" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetIri -->
        <test-method status="PASS" signature="testGetLabel()[pri:0, instance:org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest@fbd1f6]" name="testGetLabel" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLabel -->
        <test-method status="PASS" signature="testGetRecon()[pri:0, instance:org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest@fbd1f6]" name="testGetRecon" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRecon -->
        <test-method status="PASS" signature="testGetSiteIri()[pri:0, instance:org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest@fbd1f6]" name="testGetSiteIri" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSiteIri -->
        <test-method status="PASS" signature="testGetTypes()[pri:0, instance:org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest@fbd1f6]" name="testGetTypes" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTypes -->
        <test-method status="PASS" signature="testHashCode()[pri:0, instance:org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest@fbd1f6]" name="testHashCode" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashCode -->
        <test-method status="PASS" signature="testIsNew()[pri:0, instance:org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest@fbd1f6]" name="testIsNew" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNew -->
        <test-method status="PASS" signature="testToString()[pri:0, instance:org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest@fbd1f6]" name="testToString" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- org.openrefine.wikidata.schema.entityvalues.ReconEntityIdValueTest -->
      <class name="org.openrefine.wikidata.schema.WbReferenceExprTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="initServlet" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluate()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="testEvaluate" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="initServlet" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluateWithOneSkip()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="testEvaluateWithOneSkip" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluateWithOneSkip -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testNoValidSnak()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="testNoValidSnak" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoValidSnak -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbReferenceExprTest@1ce24091]" name="testSerialize" duration-ms="4" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
      </class> <!-- org.openrefine.wikidata.schema.WbReferenceExprTest -->
      <class name="org.openrefine.wikidata.schema.WbStatementGroupExprTest">
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="testCreate" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Must be true]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Must be true
	at org.jsoup.helper.Validate.isTrue(Validate.java:35)
	at org.openrefine.wikidata.schema.WbStatementGroupExpr.<init>(WbStatementGroupExpr.java:53)
	at org.openrefine.wikidata.schema.WbStatementGroupExprTest.testCreate(WbStatementGroupExprTest.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluate()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="testEvaluate" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="testSerialize" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testSkip()[pri:0, instance:org.openrefine.wikidata.schema.WbStatementGroupExprTest@5dda768f]" name="testSkip" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkip -->
      </class> <!-- org.openrefine.wikidata.schema.WbStatementGroupExprTest -->
      <class name="org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="initServlet" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="setUpProject" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="testValidSchema()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="testValidSchema" duration-ms="3253" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidSchema -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="SetUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="initServlet" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="setUpProject" is-config="true" duration-ms="7" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="testInvalidSchema()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="testInvalidSchema" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSchema -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="SetUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUpProject()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="setUpProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpProject -->
        <test-method status="PASS" signature="SetUp()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="SetUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="testNoSchema()[pri:0, instance:org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest@7a8c8dcf]" name="testNoSchema" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSchema -->
      </class> <!-- org.openrefine.wikidata.commands.PreviewWikibaseSchemaCommandTest -->
      <class name="org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="setUp" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="registerOperation()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="registerOperation" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerOperation -->
        <test-method status="PASS" signature="testReconstruct()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="testReconstruct" duration-ms="10" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReconstruct -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="initServlet" is-config="true" duration-ms="7" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="setUp" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="registerOperation()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="registerOperation" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerOperation -->
        <test-method status="PASS" signature="testConstructor()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="testConstructor" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[An edit summary must be provided.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: An edit summary must be provided.
	at org.apache.commons.lang.Validate.notEmpty(Validate.java:361)
	at org.openrefine.wikidata.operations.PerformWikibaseEditsOperation.<init>(PerformWikibaseEditsOperation.java:80)
	at org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest.testConstructor(PerformWikibaseEditsOperationTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="setUp" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="registerOperation()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="registerOperation" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerOperation -->
        <test-method status="PASS" signature="testLoadChange()[pri:0, instance:org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest@24269709]" name="testLoadChange" duration-ms="6" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadChange -->
      </class> <!-- org.openrefine.wikidata.operations.PerformWikibaseEditsOperationTest -->
      <class name="org.openrefine.wikidata.updates.scheduler.WikibaseAPIUpdateSchedulerTest">
        <test-method status="PASS" signature="testMerge()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.WikibaseAPIUpdateSchedulerTest@2aceadd4]" name="testMerge" duration-ms="6" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMerge -->
        <test-method status="PASS" signature="testMergeNew()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.WikibaseAPIUpdateSchedulerTest@2aceadd4]" name="testMergeNew" duration-ms="7" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeNew -->
        <test-method status="PASS" signature="testNewItemMentioned()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.WikibaseAPIUpdateSchedulerTest@2aceadd4]" name="testNewItemMentioned" duration-ms="4" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewItemMentioned -->
        <test-method status="PASS" signature="testNewItemNotMentioned()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.WikibaseAPIUpdateSchedulerTest@2aceadd4]" name="testNewItemNotMentioned" duration-ms="5" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewItemNotMentioned -->
        <test-method status="PASS" signature="testMixedUpdate()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.WikibaseAPIUpdateSchedulerTest@2aceadd4]" name="testMixedUpdate" duration-ms="5" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMixedUpdate -->
        <test-method status="PASS" signature="testOrderPreserved()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.WikibaseAPIUpdateSchedulerTest@2aceadd4]" name="testOrderPreserved" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOrderPreserved -->
        <test-method status="PASS" signature="testUpdateIsNotSplit()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.WikibaseAPIUpdateSchedulerTest@2aceadd4]" name="testUpdateIsNotSplit" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateIsNotSplit -->
      </class> <!-- org.openrefine.wikidata.updates.scheduler.WikibaseAPIUpdateSchedulerTest -->
      <class name="org.openrefine.wikidata.schema.ExpressionContextTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.ExpressionContextTest@24aed80c]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.schema.ExpressionContextTest@24aed80c]" name="setUp" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetCellByColumnName()[pri:0, instance:org.openrefine.wikidata.schema.ExpressionContextTest@24aed80c]" name="testGetCellByColumnName" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCellByColumnName -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.ExpressionContextTest@24aed80c]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.schema.ExpressionContextTest@24aed80c]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGetRowId()[pri:0, instance:org.openrefine.wikidata.schema.ExpressionContextTest@24aed80c]" name="testGetRowId" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRowId -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.ExpressionContextTest@24aed80c]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.schema.ExpressionContextTest@24aed80c]" name="setUp" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNonExistentColumn()[pri:0, instance:org.openrefine.wikidata.schema.ExpressionContextTest@24aed80c]" name="testNonExistentColumn" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonExistentColumn -->
      </class> <!-- org.openrefine.wikidata.schema.ExpressionContextTest -->
      <class name="org.openrefine.wikidata.updates.scheduler.PointerExtractorTest">
        <test-method status="PASS" signature="testExtractDatavalues()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.PointerExtractorTest@3a52dba3]" name="testExtractDatavalues" duration-ms="41" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractDatavalues -->
        <test-method status="PASS" signature="testExtractEntityId()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.PointerExtractorTest@3a52dba3]" name="testExtractEntityId" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractEntityId -->
        <test-method status="PASS" signature="testSnak()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.PointerExtractorTest@3a52dba3]" name="testSnak" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSnak -->
        <test-method status="PASS" signature="testSnakGroup()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.PointerExtractorTest@3a52dba3]" name="testSnakGroup" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSnakGroup -->
        <test-method status="PASS" signature="testStatement()[pri:0, instance:org.openrefine.wikidata.updates.scheduler.PointerExtractorTest@3a52dba3]" name="testStatement" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatement -->
      </class> <!-- org.openrefine.wikidata.updates.scheduler.PointerExtractorTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.QualifierCompatibilityScrutinizerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QualifierCompatibilityScrutinizerTest@2a5c8d3f]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDisallowedQualifier()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QualifierCompatibilityScrutinizerTest@2a5c8d3f]" name="testDisallowedQualifier" duration-ms="4" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisallowedQualifier -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QualifierCompatibilityScrutinizerTest@2a5c8d3f]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGoodEdit()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QualifierCompatibilityScrutinizerTest@2a5c8d3f]" name="testGoodEdit" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoodEdit -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QualifierCompatibilityScrutinizerTest@2a5c8d3f]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMissingQualifier()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.QualifierCompatibilityScrutinizerTest@2a5c8d3f]" name="testMissingQualifier" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMissingQualifier -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.QualifierCompatibilityScrutinizerTest -->
      <class name="org.openrefine.wikidata.utils.EntityCacheTests">
        <test-method status="PASS" signature="testGet()[pri:0, instance:org.openrefine.wikidata.utils.EntityCacheTests@752325ad]" name="testGet" duration-ms="104" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
      </class> <!-- org.openrefine.wikidata.utils.EntityCacheTests -->
      <class name="org.openrefine.wikidata.schema.WbPropConstantTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbPropConstantTest@279fedbd]" name="initServlet" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbPropConstantTest@279fedbd]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluate()[pri:0, instance:org.openrefine.wikidata.schema.WbPropConstantTest@279fedbd]" name="testEvaluate" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbPropConstantTest@279fedbd]" name="initServlet" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbPropConstantTest@279fedbd]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbPropConstantTest@279fedbd]" name="testSerialize" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
      </class> <!-- org.openrefine.wikidata.schema.WbPropConstantTest -->
      <class name="org.openrefine.wikidata.exporters.QSValuePrinterTest">
        <test-method status="PASS" signature="printDay()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printDay" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printDay -->
        <test-method status="PASS" signature="printFullQuantity()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printFullQuantity" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printFullQuantity -->
        <test-method status="PASS" signature="printGlobeCoordinate()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printGlobeCoordinate" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printGlobeCoordinate -->
        <test-method status="PASS" signature="printItemId()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printItemId" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printItemId -->
        <test-method status="PASS" signature="printMonolingualTextValue()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printMonolingualTextValue" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printMonolingualTextValue -->
        <test-method status="PASS" signature="printNewItemId()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printNewItemId" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printNewItemId -->
        <test-method status="PASS" signature="printPropertyId()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printPropertyId" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printPropertyId -->
        <test-method status="PASS" signature="printQuantityValueWithBounds()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printQuantityValueWithBounds" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printQuantityValueWithBounds -->
        <test-method status="PASS" signature="printQuantityValueWithUnit()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printQuantityValueWithUnit" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printQuantityValueWithUnit -->
        <test-method status="PASS" signature="printSimpleQuantityValue()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printSimpleQuantityValue" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printSimpleQuantityValue -->
        <test-method status="PASS" signature="printString()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printString" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printString -->
        <test-method status="PASS" signature="printYear()[pri:0, instance:org.openrefine.wikidata.exporters.QSValuePrinterTest@b3ca52e]" name="printYear" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printYear -->
      </class> <!-- org.openrefine.wikidata.exporters.QSValuePrinterTest -->
      <class name="org.openrefine.wikidata.qa.QAWarningTest">
        <test-method status="PASS" signature="testAggregate()[pri:0, instance:org.openrefine.wikidata.qa.QAWarningTest@2925bf5b]" name="testAggregate" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAggregate -->
        <test-method status="PASS" signature="testCompare()[pri:0, instance:org.openrefine.wikidata.qa.QAWarningTest@2925bf5b]" name="testCompare" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompare -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.qa.QAWarningTest@2925bf5b]" name="testSerialize" duration-ms="6" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
      </class> <!-- org.openrefine.wikidata.qa.QAWarningTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.SingleValueScrutinizerTest">
        <test-method status="PASS" signature="testNoIssue()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.SingleValueScrutinizerTest@45c7e403]" name="testNoIssue" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoIssue -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.SingleValueScrutinizerTest@45c7e403]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTrigger()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.SingleValueScrutinizerTest@45c7e403]" name="testTrigger" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrigger -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.SingleValueScrutinizerTest@45c7e403]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.SingleValueScrutinizerTest -->
      <class name="org.openrefine.wikidata.schema.WbItemConstantTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemConstantTest@710f4dc7]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemConstantTest@710f4dc7]" name="createProject" is-config="true" duration-ms="6" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluate()[pri:0, instance:org.openrefine.wikidata.schema.WbItemConstantTest@710f4dc7]" name="testEvaluate" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemConstantTest@710f4dc7]" name="initServlet" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemConstantTest@710f4dc7]" name="createProject" is-config="true" duration-ms="6" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbItemConstantTest@710f4dc7]" name="testSerialize" duration-ms="5" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
      </class> <!-- org.openrefine.wikidata.schema.WbItemConstantTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.SelfReferentialScrutinizerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.SelfReferentialScrutinizerTest@1ff4931d]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNoProblem()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.SelfReferentialScrutinizerTest@1ff4931d]" name="testNoProblem" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoProblem -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.SelfReferentialScrutinizerTest@1ff4931d]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTrigger()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.SelfReferentialScrutinizerTest@1ff4931d]" name="testTrigger" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrigger -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.SelfReferentialScrutinizerTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.RestrictedPositionScrutinizerTest">
        <test-method status="PASS" signature="testNoProblem()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedPositionScrutinizerTest@65e98b1c]" name="testNoProblem" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoProblem -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedPositionScrutinizerTest@65e98b1c]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNotRestricted()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedPositionScrutinizerTest@65e98b1c]" name="testNotRestricted" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotRestricted -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedPositionScrutinizerTest@65e98b1c]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedPositionScrutinizerTest@65e98b1c]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTriggerMainSnak()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedPositionScrutinizerTest@65e98b1c]" name="testTriggerMainSnak" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTriggerMainSnak -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedPositionScrutinizerTest@65e98b1c]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTriggerReference()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.RestrictedPositionScrutinizerTest@65e98b1c]" name="testTriggerReference" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTriggerReference -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.RestrictedPositionScrutinizerTest -->
      <class name="org.openrefine.wikidata.schema.WbLocationConstantTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="constructInvalid()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="constructInvalid" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <exception class="java.text.ParseException">
            <message>
              <![CDATA[Invalid globe coordinates]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.text.ParseException: Invalid globe coordinates
	at org.openrefine.wikidata.schema.WbLocationConstant.parse(WbLocationConstant.java:84)
	at org.openrefine.wikidata.schema.WbLocationConstant.<init>(WbLocationConstant.java:54)
	at org.openrefine.wikidata.schema.WbLocationConstantTest.constructInvalid(WbLocationConstantTest.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.text.ParseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructInvalid -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="constructNotNumber()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="constructNotNumber" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <exception class="java.text.ParseException">
            <message>
              <![CDATA[Invalid globe coordinates]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.text.ParseException: Invalid globe coordinates
	at org.openrefine.wikidata.schema.WbLocationConstant.parse(WbLocationConstant.java:84)
	at org.openrefine.wikidata.schema.WbLocationConstant.<init>(WbLocationConstant.java:54)
	at org.openrefine.wikidata.schema.WbLocationConstantTest.constructNotNumber(WbLocationConstantTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.text.ParseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructNotNumber -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="constructtooManyParts()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="constructtooManyParts" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <exception class="java.text.ParseException">
            <message>
              <![CDATA[Invalid globe coordinates]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.text.ParseException: Invalid globe coordinates
	at org.openrefine.wikidata.schema.WbLocationConstant.parse(WbLocationConstant.java:84)
	at org.openrefine.wikidata.schema.WbLocationConstant.<init>(WbLocationConstant.java:54)
	at org.openrefine.wikidata.schema.WbLocationConstantTest.constructtooManyParts(WbLocationConstantTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.text.ParseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructtooManyParts -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="initServlet" is-config="true" duration-ms="6" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluate()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="testEvaluate" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="initServlet" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluateWithPrecision()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="testEvaluateWithPrecision" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluateWithPrecision -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testParseInvalid()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="testParseInvalid" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <exception class="java.text.ParseException">
            <message>
              <![CDATA[Invalid globe coordinates]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.text.ParseException: Invalid globe coordinates
	at org.openrefine.wikidata.schema.WbLocationConstant.parse(WbLocationConstant.java:84)
	at org.openrefine.wikidata.schema.WbLocationConstantTest.testParseInvalid(WbLocationConstantTest.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.text.ParseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseInvalid -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="createProject" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialization()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationConstantTest@61322f9d]" name="testSerialization" duration-ms="6" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialization -->
      </class> <!-- org.openrefine.wikidata.schema.WbLocationConstantTest -->
      <class name="org.openrefine.wikidata.schema.WbLocationVariableTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="initServlet" is-config="true" duration-ms="9" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="setupVariable" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testEmpty()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="testEmpty" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmpty -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="initServlet" is-config="true" duration-ms="6" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testOnlyOneValue()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="testOnlyOneValue" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnlyOneValue -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="initServlet" is-config="true" duration-ms="5" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="testSerialize" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="setupVariable" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testWhitespace()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="testWhitespace" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWhitespace -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testWithComma()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="testWithComma" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithComma -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testWithSlash()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="testWithSlash" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithSlash -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbLocationVariableTest@510f3d34]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
      </class> <!-- org.openrefine.wikidata.schema.WbLocationVariableTest -->
      <class name="org.openrefine.wikidata.schema.WbNameDescExprTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="initServlet" is-config="true" duration-ms="10" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testContributeToAlias()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="testContributeToAlias" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContributeToAlias -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testContributeToDescription()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="testContributeToDescription" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContributeToDescription -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testContributeToLabel()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="testContributeToLabel" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContributeToLabel -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testGetters()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="testGetters" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetters -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="initServlet" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialization()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="testSerialization" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialization -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="initServlet" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSkipped()[pri:0, instance:org.openrefine.wikidata.schema.WbNameDescExprTest@6ad82709]" name="testSkipped" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkipped -->
      </class> <!-- org.openrefine.wikidata.schema.WbNameDescExprTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.InverseConstaintScrutinizerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.InverseConstaintScrutinizerTest@7817fd62]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNoSymmetricClosure()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.InverseConstaintScrutinizerTest@7817fd62]" name="testNoSymmetricClosure" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSymmetricClosure -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.InverseConstaintScrutinizerTest@7817fd62]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSymmetric()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.InverseConstaintScrutinizerTest@7817fd62]" name="testSymmetric" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSymmetric -->
        <test-method status="PASS" signature="testTrigger()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.InverseConstaintScrutinizerTest@7817fd62]" name="testTrigger" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrigger -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.InverseConstaintScrutinizerTest@7817fd62]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.InverseConstaintScrutinizerTest -->
      <class name="org.openrefine.wikidata.editing.ReconEntityRewriterTest">
        <test-method status="PASS" signature="testMatched()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="testMatched" duration-ms="4" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatched -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNotCreatedYet()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="testNotCreatedYet" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <exception class="org.openrefine.wikidata.editing.ReconEntityRewriter$MissingEntityIdFound">
            <full-stacktrace>
              <![CDATA[org.openrefine.wikidata.editing.ReconEntityRewriter$MissingEntityIdFound
	at org.openrefine.wikidata.editing.ReconEntityRewriter.copy(ReconEntityRewriter.java:88)
	at org.openrefine.wikidata.editing.ReconEntityRewriterTest.testNotCreatedYet(ReconEntityRewriterTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openrefine.wikidata.editing.ReconEntityRewriter$MissingEntityIdFound -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotCreatedYet -->
        <test-method status="PASS" signature="testRewriteCreate()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="testRewriteCreate" duration-ms="8" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRewriteCreate -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRewriteUpdateOnExistingEntity()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="testRewriteUpdateOnExistingEntity" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRewriteUpdateOnExistingEntity -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRewriteUpdateOnPreviouslyCreatedEntity()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="testRewriteUpdateOnPreviouslyCreatedEntity" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRewriteUpdateOnPreviouslyCreatedEntity -->
        <test-method status="PASS" signature="testSubjectNotRewritten()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="testSubjectNotRewritten" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubjectNotRewritten -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSubjectRewritten()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="testSubjectRewritten" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubjectRewritten -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSuccessfulRewrite()[pri:0, instance:org.openrefine.wikidata.editing.ReconEntityRewriterTest@8297b3a]" name="testSuccessfulRewrite" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulRewrite -->
      </class> <!-- org.openrefine.wikidata.editing.ReconEntityRewriterTest -->
      <class name="org.openrefine.wikidata.schema.WbItemVariableTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="initServlet" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="createProject" is-config="true" duration-ms="6" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testInvalidSpace()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="testInvalidSpace" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpace -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="initServlet" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="createProject" is-config="true" duration-ms="6" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testNewItemCell()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="testNewItemCell" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewItemCell -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="createProject" is-config="true" duration-ms="7" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="setupVariable" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testReconciledCell()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="testReconciledCell" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReconciledCell -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="initServlet" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="createProject" is-config="true" duration-ms="5" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="testSerialize" duration-ms="13" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="createProject" is-config="true" duration-ms="5" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testUnmatchedCell()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="testUnmatchedCell" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnmatchedCell -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="initServlet" is-config="true" duration-ms="7" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="createProject" is-config="true" duration-ms="5" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testUnreconciledCell()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="testUnreconciledCell" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnreconciledCell -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbItemVariableTest@2362f559]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
      </class> <!-- org.openrefine.wikidata.schema.WbItemVariableTest -->
      <class name="org.openrefine.wikidata.schema.WbStringConstantTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="initServlet" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEmpty()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="testEmpty" duration-ms="1" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The validated expression is false]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The validated expression is false
	at org.apache.commons.lang.Validate.isTrue(Validate.java:179)
	at org.openrefine.wikidata.schema.WbStringConstant.<init>(WbStringConstant.java:40)
	at org.openrefine.wikidata.schema.WbStringConstantTest.testEmpty(WbStringConstantTest.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmpty -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="initServlet" is-config="true" duration-ms="6" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluate()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="testEvaluate" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="initServlet" is-config="true" duration-ms="12" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="testSerialize" duration-ms="5" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="initServlet" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="createProject" is-config="true" duration-ms="7" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testTrim()[pri:0, instance:org.openrefine.wikidata.schema.WbStringConstantTest@b2c9a9c]" name="testTrim" duration-ms="2" started-at="2020-01-06T13:28:41Z" finished-at="2020-01-06T13:28:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrim -->
      </class> <!-- org.openrefine.wikidata.schema.WbStringConstantTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.NoEditsMadeScrutinizerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NoEditsMadeScrutinizerTest@4c178a76]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNonNull()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NoEditsMadeScrutinizerTest@4c178a76]" name="testNonNull" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonNull -->
        <test-method status="PASS" signature="testNull()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NoEditsMadeScrutinizerTest@4c178a76]" name="testNull" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNull -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NoEditsMadeScrutinizerTest@4c178a76]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTrigger()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NoEditsMadeScrutinizerTest@4c178a76]" name="testTrigger" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrigger -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NoEditsMadeScrutinizerTest@4c178a76]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.NoEditsMadeScrutinizerTest -->
      <class name="org.openrefine.wikidata.exporters.SchemaExporterTest">
        <test-method status="PASS" signature="testNoSchema()[pri:0, instance:org.openrefine.wikidata.exporters.SchemaExporterTest@fa4c865]" name="testNoSchema" duration-ms="8" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSchema -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.exporters.SchemaExporterTest@fa4c865]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
      </class> <!-- org.openrefine.wikidata.exporters.SchemaExporterTest -->
      <class name="org.openrefine.wikidata.updates.ItemUpdateTest">
        <test-method status="PASS" signature="testAddStatements()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testAddStatements" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStatements -->
        <test-method status="PASS" signature="testConstructOverridingLabels()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testConstructOverridingLabels" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructOverridingLabels -->
        <test-method status="PASS" signature="testCreateWithoutSubject()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testCreateWithoutSubject" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Object must not be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Object must not be null
	at org.jsoup.helper.Validate.notNull(Validate.java:16)
	at org.openrefine.wikidata.updates.ItemUpdateBuilder.<init>(ItemUpdateBuilder.java:62)
	at org.openrefine.wikidata.updates.ItemUpdateTest.testCreateWithoutSubject(ItemUpdateTest.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateWithoutSubject -->
        <test-method status="PASS" signature="testDeleteStatements()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testDeleteStatements" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteStatements -->
        <test-method status="PASS" signature="testGroupBySubject()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testGroupBySubject" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupBySubject -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testIsEmpty" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testIsNew()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testIsNew" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNew -->
        <test-method status="PASS" signature="testIsNull()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testIsNull" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNull -->
        <test-method status="PASS" signature="testMerge()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testMerge" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMerge -->
        <test-method status="PASS" signature="testMergeDescriptionsIfNew()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testMergeDescriptionsIfNew" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeDescriptionsIfNew -->
        <test-method status="PASS" signature="testMergeDescriptionsIfNewOverriding()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testMergeDescriptionsIfNewOverriding" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeDescriptionsIfNewOverriding -->
        <test-method status="PASS" signature="testMergeDescriptionsIfNewOverriding2()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testMergeDescriptionsIfNewOverriding2" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeDescriptionsIfNewOverriding2 -->
        <test-method status="PASS" signature="testMergeLabels()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testMergeLabels" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeLabels -->
        <test-method status="PASS" signature="testMergeLabelsIfNew()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testMergeLabelsIfNew" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeLabelsIfNew -->
        <test-method status="PASS" signature="testMergeLabelsIfNewOverriding()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testMergeLabelsIfNewOverriding" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeLabelsIfNewOverriding -->
        <test-method status="PASS" signature="testMergeLabelsIfNewOverriding2()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testMergeLabelsIfNewOverriding2" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeLabelsIfNewOverriding2 -->
        <test-method status="PASS" signature="testNormalizeTerms()[pri:0, instance:org.openrefine.wikidata.updates.ItemUpdateTest@3bd82cf5]" name="testNormalizeTerms" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNormalizeTerms -->
      </class> <!-- org.openrefine.wikidata.updates.ItemUpdateTest -->
      <class name="org.openrefine.wikidata.schema.WbDateConstantTest">
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testEvaluate()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="testEvaluate" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testInvalid()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="testInvalid" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid datestamp provided: invalid format]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid datestamp provided: invalid format
	at org.openrefine.wikidata.schema.WbDateConstant.setOrigDatestamp(WbDateConstant.java:178)
	at org.openrefine.wikidata.schema.WbDateConstant.<init>(WbDateConstant.java:83)
	at org.openrefine.wikidata.schema.WbDateConstantTest.testInvalid(WbDateConstantTest.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalid -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="initServlet" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testInvalidCalendar()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="testInvalidCalendar" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid datestamp provided: 2018-01-02_P234]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid datestamp provided: 2018-01-02_P234
	at org.openrefine.wikidata.schema.WbDateConstant.setOrigDatestamp(WbDateConstant.java:178)
	at org.openrefine.wikidata.schema.WbDateConstant.<init>(WbDateConstant.java:83)
	at org.openrefine.wikidata.schema.WbDateConstantTest.testInvalidCalendar(WbDateConstantTest.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidCalendar -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="initServlet" is-config="true" duration-ms="6" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testPartlyValid()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="testPartlyValid" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid datestamp provided: 2018-partly valid]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid datestamp provided: 2018-partly valid
	at org.openrefine.wikidata.schema.WbDateConstant.setOrigDatestamp(WbDateConstant.java:178)
	at org.openrefine.wikidata.schema.WbDateConstant.<init>(WbDateConstant.java:83)
	at org.openrefine.wikidata.schema.WbDateConstantTest.testPartlyValid(WbDateConstantTest.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPartlyValid -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="testSerialize" duration-ms="7" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="FAIL" signature="testToday()[pri:0, instance:org.openrefine.wikidata.schema.WbDateConstantTest@544fa968]" name="testToday" duration-ms="3" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2020-01-06 (Prec.: day [-0 .. +0], PCal: Gregorian)] but found [2020-00-07 (Prec.: day [-0 .. +0], PCal: Gregorian)]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2020-01-06 (Prec.: day [-0 .. +0], PCal: Gregorian)] but found [2020-00-07 (Prec.: day [-0 .. +0], PCal: Gregorian)]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at org.openrefine.wikidata.schema.WbExpressionTest.evaluatesTo(WbExpressionTest.java:70)
	at org.openrefine.wikidata.schema.WbDateConstantTest.testToday(WbDateConstantTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToday -->
      </class> <!-- org.openrefine.wikidata.schema.WbDateConstantTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.NewItemScrutinizerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NewItemScrutinizerTest@247bddad]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDeletedStatements()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NewItemScrutinizerTest@247bddad]" name="testDeletedStatements" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletedStatements -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NewItemScrutinizerTest@247bddad]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testEmptyItem()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NewItemScrutinizerTest@247bddad]" name="testEmptyItem" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyItem -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NewItemScrutinizerTest@247bddad]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testGoodNewItem()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NewItemScrutinizerTest@247bddad]" name="testGoodNewItem" duration-ms="1" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGoodNewItem -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NewItemScrutinizerTest@247bddad]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTrigger()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.NewItemScrutinizerTest@247bddad]" name="testTrigger" duration-ms="0" started-at="2020-01-06T13:28:42Z" finished-at="2020-01-06T13:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrigger -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.NewItemScrutinizerTest -->
      <class name="org.openrefine.wikidata.schema.WbMonolingualExprTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEmptyLanguageCode()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="testEmptyLanguageCode" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyLanguageCode -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEmptyText()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="testEmptyText" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyText -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluateConstant()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="testEvaluateConstant" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluateConstant -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluateVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="testEvaluateVariable" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluateVariable -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="initServlet" is-config="true" duration-ms="21" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testInvalidLanguageCode()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="testInvalidLanguageCode" duration-ms="5" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLanguageCode -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="initServlet" is-config="true" duration-ms="10" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testTrim()[pri:0, instance:org.openrefine.wikidata.schema.WbMonolingualExprTest@d35dea7]" name="testTrim" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrim -->
      </class> <!-- org.openrefine.wikidata.schema.WbMonolingualExprTest -->
      <class name="org.openrefine.wikidata.exporters.QuickStatementsExporterTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testDeleteStatement()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="testDeleteStatement" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteStatement -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testGetContentType()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="testGetContentType" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContentType -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testImpossibleScheduling()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="testImpossibleScheduling" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImpossibleScheduling -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testNameDesc()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="testNameDesc" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNameDesc -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testNoSchema()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="testNoSchema" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSchema -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testOptionalNameDesc()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="testOptionalNameDesc" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptionalNameDesc -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testQualifier()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="testQualifier" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQualifier -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testSimpleProject()[pri:0, instance:org.openrefine.wikidata.exporters.QuickStatementsExporterTest@7770f470]" name="testSimpleProject" duration-ms="28" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleProject -->
      </class> <!-- org.openrefine.wikidata.exporters.QuickStatementsExporterTest -->
      <class name="org.openrefine.wikidata.schema.WbQuantityExprTest">
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="testExponent()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="testExponent" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExponent -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testInvalidAmountWithUnit()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="testInvalidAmountWithUnit" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidAmountWithUnit -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="initServlet" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testInvalidAmountWithoutUnit()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="testInvalidAmountWithoutUnit" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidAmountWithoutUnit -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testInvalidUnitWithAmount()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="testInvalidUnitWithAmount" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUnitWithAmount -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testOverflow()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="testOverflow" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverflow -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testWithUnit()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="testWithUnit" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithUnit -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testWithoutUnit()[pri:0, instance:org.openrefine.wikidata.schema.WbQuantityExprTest@24313fcc]" name="testWithoutUnit" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithoutUnit -->
      </class> <!-- org.openrefine.wikidata.schema.WbQuantityExprTest -->
      <class name="org.openrefine.wikidata.qa.QAWarningStoreTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.QAWarningStoreTest@5e5d171f]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testCount()[pri:0, instance:org.openrefine.wikidata.qa.QAWarningStoreTest@5e5d171f]" name="testCount" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCount -->
        <test-method status="PASS" signature="testMaxSeverity()[pri:0, instance:org.openrefine.wikidata.qa.QAWarningStoreTest@5e5d171f]" name="testMaxSeverity" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxSeverity -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.QAWarningStoreTest@5e5d171f]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.QAWarningStoreTest@5e5d171f]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.qa.QAWarningStoreTest@5e5d171f]" name="testSerialize" duration-ms="5" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
      </class> <!-- org.openrefine.wikidata.qa.QAWarningStoreTest -->
      <class name="org.openrefine.wikidata.editing.EditBatchProcessorTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.editing.EditBatchProcessorTest@7d20d0b]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.EditBatchProcessorTest@7d20d0b]" name="setUp" is-config="true" duration-ms="149" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMultipleBatches()[pri:0, instance:org.openrefine.wikidata.editing.EditBatchProcessorTest@7d20d0b]" name="testMultipleBatches" duration-ms="108" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleBatches -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.editing.EditBatchProcessorTest@7d20d0b]" name="initServlet" is-config="true" duration-ms="13" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.editing.EditBatchProcessorTest@7d20d0b]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNewItem()[pri:0, instance:org.openrefine.wikidata.editing.EditBatchProcessorTest@7d20d0b]" name="testNewItem" duration-ms="4" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewItem -->
      </class> <!-- org.openrefine.wikidata.editing.EditBatchProcessorTest -->
      <class name="org.openrefine.wikidata.schema.WbStringVariableTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="initServlet" is-config="true" duration-ms="11" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testDoubleInteger()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="testDoubleInteger" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleInteger -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="initServlet" is-config="true" duration-ms="9" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testDoubleWhitespace()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="testDoubleWhitespace" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleWhitespace -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="initServlet" is-config="true" duration-ms="6" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEmpty()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="testEmpty" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmpty -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="initServlet" is-config="true" duration-ms="6" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testInteger()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="testInteger" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInteger -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="initServlet" is-config="true" duration-ms="11" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="createProject" is-config="true" duration-ms="4" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="setupVariable" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testLargeDouble()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="testLargeDouble" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLargeDouble -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="initServlet" is-config="true" duration-ms="10" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="createProject" is-config="true" duration-ms="8" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="setupVariable" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testLeadingWhitespace()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="testLeadingWhitespace" duration-ms="8" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeadingWhitespace -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="initServlet" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testLong()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="testLong" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLong -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="initServlet" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSimpleString()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="testSimpleString" duration-ms="1" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleString -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="createProject" is-config="true" duration-ms="3" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="initServlet" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:46Z" finished-at="2020-01-06T13:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="setupVariable()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="setupVariable" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupVariable -->
        <test-method status="PASS" signature="testTrailingWhitespace()[pri:0, instance:org.openrefine.wikidata.schema.WbStringVariableTest@77f1baf5]" name="testTrailingWhitespace" duration-ms="1" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrailingWhitespace -->
      </class> <!-- org.openrefine.wikidata.schema.WbStringVariableTest -->
      <class name="org.openrefine.wikidata.schema.WbSnakExprTest">
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbSnakExprTest@41a2befb]" name="initServlet" is-config="true" duration-ms="7" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbSnakExprTest@41a2befb]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testEvaluate()[pri:0, instance:org.openrefine.wikidata.schema.WbSnakExprTest@41a2befb]" name="testEvaluate" duration-ms="1" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEvaluate -->
        <test-method status="PASS" signature="initServlet()[pri:0, instance:org.openrefine.wikidata.schema.WbSnakExprTest@41a2befb]" name="initServlet" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initServlet -->
        <test-method status="PASS" signature="createProject()[pri:0, instance:org.openrefine.wikidata.schema.WbSnakExprTest@41a2befb]" name="createProject" is-config="true" duration-ms="2" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method status="PASS" signature="testSerialize()[pri:0, instance:org.openrefine.wikidata.schema.WbSnakExprTest@41a2befb]" name="testSerialize" duration-ms="2" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSerialize -->
      </class> <!-- org.openrefine.wikidata.schema.WbSnakExprTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.EntityTypeScrutinizerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.EntityTypeScrutinizerTest@6c40365c]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAllowed()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.EntityTypeScrutinizerTest@6c40365c]" name="testAllowed" duration-ms="1" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllowed -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.EntityTypeScrutinizerTest@6c40365c]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testDisallowed()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.EntityTypeScrutinizerTest@6c40365c]" name="testDisallowed" duration-ms="1" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisallowed -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.EntityTypeScrutinizerTest -->
      <class name="org.openrefine.wikidata.qa.scrutinizers.CalendarScrutinizerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.CalendarScrutinizerTest@7bedc48a]" name="setUp" is-config="true" duration-ms="1" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testScrutinizeCloseValue()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.CalendarScrutinizerTest@7bedc48a]" name="testScrutinizeCloseValue" duration-ms="1" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrutinizeCloseValue -->
        <test-method status="PASS" signature="testScrutinizeEarlyDay()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.CalendarScrutinizerTest@7bedc48a]" name="testScrutinizeEarlyDay" duration-ms="5" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrutinizeEarlyDay -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.CalendarScrutinizerTest@7bedc48a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testScrutinizeEarlyYear()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.CalendarScrutinizerTest@7bedc48a]" name="testScrutinizeEarlyYear" duration-ms="3" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrutinizeEarlyYear -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.CalendarScrutinizerTest@7bedc48a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testScrutinizeRecentValue()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.CalendarScrutinizerTest@7bedc48a]" name="testScrutinizeRecentValue" duration-ms="1" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrutinizeRecentValue -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.openrefine.wikidata.qa.scrutinizers.CalendarScrutinizerTest@7bedc48a]" name="setUp" is-config="true" duration-ms="0" started-at="2020-01-06T13:28:47Z" finished-at="2020-01-06T13:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- org.openrefine.wikidata.qa.scrutinizers.CalendarScrutinizerTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
